"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[387],{3905:function(e,r,t){t.d(r,{Zo:function(){return s},kt:function(){return b}});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),u=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},s=function(e){var r=u(e.components);return n.createElement(l.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),f=u(t),b=a,d=f["".concat(l,".").concat(b)]||f[b]||p[b]||o;return t?n.createElement(d,i(i({ref:r},s),{},{components:t})):n.createElement(d,i({ref:r},s))}));function b(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=f;var c={};for(var l in r)hasOwnProperty.call(r,l)&&(c[l]=r[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var u=2;u<o;u++)i[u]=t[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},9026:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return s},default:function(){return f}});var n=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],c={sidebar_position:0},l="About WorldQL Core",u={unversionedId:"architecture/about",id:"architecture/about",isDocsHomePage:!1,title:"About WorldQL Core",description:"WorldQL Core (formerly called WorldQL Server) is a free, open source spatial database and message broker.",source:"@site/docs/architecture/about.md",sourceDirName:"architecture",slug:"/architecture/about",permalink:"/architecture/about",editUrl:"https://github.com/WorldQL/docs.worldql.com/tree/trunk/docs/architecture/about.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"Welcome",permalink:"/"},next:{title:"Client-server pattern",permalink:"/architecture/client-server"}},s=[],p={toc:s};function f(e){var r=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"about-worldql-core"},"About WorldQL Core"),(0,o.kt)("p",null,"WorldQL Core (formerly called WorldQL Server) is a free, open source spatial database and message broker."),(0,o.kt)("p",null,'Let\'s break down what "spatial database and message broker" means:'),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Spatial database: Like a normal SQL database but with indexes that make retrieving rows in a certain 3D area faster.\n",(0,o.kt)("a",{parentName:"li",href:"https://www.worldql.com/posts/2021-09-spatial-partitions-postgres/"},"Here's a blog post describing how WorldQL configures a database"),"."),(0,o.kt)("li",{parentName:"ul"},"Spatial message broker: Think Redis pub/sub but instead of subscribing to a channel you subscribe to an area.")),(0,o.kt)("p",null,"WorldQL communicates using a ",(0,o.kt)("a",{parentName:"p",href:"https://google.github.io/flatbuffers/"},"Google Flatbuffer")," schema, which allows for an efficient binary wire format and zero-copy reads from clients. Rather than a human-readable SQL-like language, WorldQL queries are sent by packing instructions and parameters into a fixed schema binary format."),(0,o.kt)("p",null,"It communicates over multiple protocols including ZeroMQ, WebSocket, and (coming soon) UDP."))}f.isMDXComponent=!0}}]);